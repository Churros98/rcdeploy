---
- name: Initialisation des voitures
  hosts: voitures
  remote_user: master
  become: yes
  become_method: sudo
  become_user: root

  tasks:
  - name: Modification de la configuration matériel (Caméra/GPIO/UART/GPU)
    ansible.builtin.command: raspi-config nonint do_legacy 0
    ansible.builtin.command: sed -i '/^dtoverlay=pwm-2chan/ c\dtoverlay=pwm-2chan,pin=12,func=4,pin2=13,func2=4' /boot/config.txt || echo 'dtoverlay=pwm-2chan,pin=12,func=4,pin2=13,func2=4' | sudo tee -a /boot/config.txt
    ansible.builtin.command: grep -qxF '[all]' /boot/config.txt || echo '[all]' | sudo tee -a /boot/config.txt
    ansible.builtin.command: grep -qxF 'gpu_mem=128' /boot/config.txt || echo 'gpu_mem=128' | sudo tee -a /boot/config.txt
    ansible.builtin.command: grep -qxF 'enable_uart=1' /boot/config.txt || echo 'enable_uart=1' | sudo tee -a /boot/config.txt

  - name: Mise à jour des paquets
    ansible.builtin.command: apt-get update -y

  - name: Installation des paquets nécessaires
    ansible.builtin.command: apt-get install -y usb_modeswitch dig

  - name: Ajout de l'utilitaire "usb_modeswitch" dans udev pour le changement de mode sur certain modem
    ansible.builtin.command: sed -i -e 's/ATTR{idVendor}=="12d1", ATTR{idProduct}=="15c1", RUN+="usb_modeswitch '\''\/%k'\''"/ATTR{idVendor}=="12d1", ATTR{idProduct}=="1573", RUN+="'\''\/usr\/sbin\/usb_modeswitch -W -v 12d1 -p 1573 -u 1'\''"/' /lib/udev/rules.d/40-usb_modeswitch.rules

  - name: Ecrire la configuration NetworkManager (et ModemManager) pour le LTE
    ansible.builtin.template:
      src: ./res/3G4G.nmconnection
      dest: /etc/NetworkManager/system-connections/3G4G.nmconnection

  - name: Ajoute le script de démarrage de ustreamer
    ansible.builtin.template:
      src: ./res/ustreamer_start.sh
      dest: /usr/local/bin/ustreamer_start.sh
    ansible.builtin.command: chmod +x /usr/local/bin/ustreamer_start.sh

  - name: Ajoute le script de démarrage de rctelemetrie
    ansible.builtin.template:
      src: ./res/rctelemetrie_start.sh
      dest: /usr/local/bin/rctelemetrie_start.sh
    ansible.builtin.command: chmod +x /usr/local/bin/rctelemetrie_start.sh

  - name: Ajoute l'ensemble des binaires nécessaires
    ansible.builtin.template:
      src: ./res/bin
      dest: /usr/local/bin
    ansible.builtin.command: chmod +x /usr/local/bin/*

  - name: Ajoute le service de ustreamer
    ansible.builtin.template:
      src: ./res/ustreamer.service
      dest: /etc/systemd/system/ustreamer.service
    ansible.builtin.command: systemctl daemon-reload

  - name: Ajoute le service de rctelemetrie
    ansible.builtin.template:
      src: ./res/rctelemetrie.service
      dest: /etc/systemd/system/rctelemetrie.service
    ansible.builtin.command: systemctl daemon-reload

  - name: Activation des services
    ansible.builtin.command: systemctl enable ustreamer
    ansible.builtin.command: systemctl enable rctelemetrie

  - name: Activation de la connexion 3G4G
    ansible.builtin.command: nmcli connection up 3G4G

  - name: Redémarrage
    ansible.builtin.command: reboot
